{"ast":null,"code":"import consumer from \"./consumer\";\nconsumer.subscriptions.create(\"RoomChannel\", {\n  connected: function connected() {\n    // Called when the subscription is ready for use on the server\n    console.log(\"connected to the room......\");\n  },\n  disconnected: function disconnected() {\n    // Called when the subscription has been terminated by the server\n    console.log(\"disconnected.......\");\n  },\n  received: function received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    console.log(\"receiving dataaaaaa\", data);\n    console.log(\"dataaaaaaaa\", JSON.parse(data.content));\n    var x = $('#container');\n    console.log(\"xxxxxxxxxxx\", x);\n    console.log(\"data.content[0] +++++\", JSON.parse(data.content)[0]);\n    var headers = Object.keys(JSON.parse(data.content)[0]);\n    console.log(\"headersssssssss\", headers);\n\n    for (var i = 0; i < data.content.length; i++) {\n      var tr = document.createElement('tr');\n\n      for (var j = 0; j < headers.length; j++) {\n        console.log(\"jjjjjjj\", headers[j]);\n        var td = document.createElement('td');\n        td.appendChild(document.createTextNode(data.content[headers[j]]));\n        tr.appendChild(td);\n      }\n\n      $('#container').appendChild(tr);\n    }\n  }\n});","map":{"version":3,"sources":["/home/amit/workspace/test_taker_app_folder/joineight_assignment/test_taker/app/javascript/channels/room_channel.js"],"names":["consumer","subscriptions","create","connected","console","log","disconnected","received","data","JSON","parse","content","x","$","headers","Object","keys","i","length","tr","document","createElement","j","td","appendChild","createTextNode"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEAA,QAAQ,CAACC,aAAT,CAAuBC,MAAvB,CAA8B,aAA9B,EAA6C;AAC3CC,EAAAA,SAD2C,uBAC/B;AACV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,GAJ0C;AAM3CC,EAAAA,YAN2C,0BAM5B;AACb;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,GAT0C;AAW3CE,EAAAA,QAX2C,oBAWlCC,IAXkC,EAW5B;AACb;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCG,IAAnC;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,OAAhB,CAA3B;AACA,QAAIC,CAAC,GAAGC,CAAC,CAAC,YAAD,CAAT;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BO,CAA3B;AAEAR,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCI,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,OAAhB,EAAyB,CAAzB,CAArC;AAIA,QAAIG,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYP,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,OAAhB,EAAyB,CAAzB,CAAZ,CAAd;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BS,OAA/B;;AACA,SAAI,IAAIG,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGT,IAAI,CAACG,OAAL,CAAaO,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,UAAIE,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAT;;AAEE,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,OAAO,CAACI,MAA3B,EAAmCI,CAAC,EAApC,EAAwC;AACtClB,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBS,OAAO,CAACQ,CAAD,CAA9B;AACA,YAAIC,EAAE,GAAGH,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAT;AACAE,QAAAA,EAAE,CAACC,WAAH,CAAeJ,QAAQ,CAACK,cAAT,CAAwBjB,IAAI,CAACG,OAAL,CAAaG,OAAO,CAACQ,CAAD,CAApB,CAAxB,CAAf;AACAH,QAAAA,EAAE,CAACK,WAAH,CAAeD,EAAf;AACD;;AAECV,MAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBW,WAAhB,CAA4BL,EAA5B;AACL;AACJ;AApC4C,CAA7C","sourcesContent":["import consumer from \"./consumer\"\n\nconsumer.subscriptions.create(\"RoomChannel\", {\n  connected() {\n    // Called when the subscription is ready for use on the server\n    console.log(\"connected to the room......\")\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n    console.log(\"disconnected.......\")\n  },\n\n  received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    console.log(\"receiving dataaaaaa\", data);\n    console.log(\"dataaaaaaaa\", JSON.parse(data.content));\n    var x = $('#container');\n    console.log(\"xxxxxxxxxxx\", x);\n\n    console.log(\"data.content[0] +++++\", JSON.parse(data.content)[0]);\n\n\n\n    var headers = Object.keys(JSON.parse(data.content)[0]);\n    console.log(\"headersssssssss\", headers);\n    for(var i = 0; i < data.content.length; i++) {\n      var tr = document.createElement('tr');\n\n        for(var j = 0; j < headers.length; j++) {\n          console.log(\"jjjjjjj\", headers[j]);\n          var td = document.createElement('td');\n          td.appendChild(document.createTextNode(data.content[headers[j]]));\n          tr.appendChild(td)\n        }\n\n          $('#container').appendChild(tr);\n    }\n}\n})\n"]},"metadata":{},"sourceType":"module"}