{"ast":null,"code":"import consumer from \"./consumer\";\nconsumer.subscriptions.create(\"RoomChannel\", {\n  connected: function connected() {\n    // Called when the subscription is ready for use on the server\n    console.log(\"connected to the room......\");\n  },\n  disconnected: function disconnected() {\n    // Called when the subscription has been terminated by the server\n    console.log(\"disconnected.......\");\n  },\n  received: function received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    $('#container').empty();\n    var headers = Object.keys(JSON.parse(data.content)[0]);\n\n    for (var i = 0; i < JSON.parse(data.content).length; i++) {\n      var tr = document.createElement('tr');\n\n      for (var j = 0; j < headers.length; j++) {\n        var td = document.createElement('td');\n        td.appendChild(document.createTextNode(JSON.parse(data.content)[i][headers[j]]));\n        tr.appendChild(td);\n      }\n\n      $('#container').append(tr);\n    }\n  }\n});","map":{"version":3,"sources":["/home/amit/workspace/test_taker_app_folder/joineight_assignment/test_taker/app/javascript/channels/room_channel.js"],"names":["consumer","subscriptions","create","connected","console","log","disconnected","received","data","$","empty","headers","Object","keys","JSON","parse","content","i","length","tr","document","createElement","j","td","appendChild","createTextNode","append"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEAA,QAAQ,CAACC,aAAT,CAAuBC,MAAvB,CAA8B,aAA9B,EAA6C;AAC3CC,EAAAA,SAD2C,uBAC/B;AACV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,GAJ0C;AAM3CC,EAAAA,YAN2C,0BAM5B;AACb;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,GAT0C;AAW3CE,EAAAA,QAX2C,oBAWlCC,IAXkC,EAW5B;AACb;AACAC,IAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBC,KAAhB;AAEA,QAAIC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYC,IAAI,CAACC,KAAL,CAAWP,IAAI,CAACQ,OAAhB,EAAyB,CAAzB,CAAZ,CAAd;;AAEA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,IAAI,CAACC,KAAL,CAAWP,IAAI,CAACQ,OAAhB,EAAyBE,MAA5C,EAAoDD,CAAC,EAArD,EAAyD;AACvD,UAAIE,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAT;;AAEE,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGX,OAAO,CAACO,MAA3B,EAAmCI,CAAC,EAApC,EAAwC;AACtC,YAAIC,EAAE,GAAGH,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAT;AACAE,QAAAA,EAAE,CAACC,WAAH,CAAeJ,QAAQ,CAACK,cAAT,CAAwBX,IAAI,CAACC,KAAL,CAAWP,IAAI,CAACQ,OAAhB,EAAyBC,CAAzB,EAA4BN,OAAO,CAACW,CAAD,CAAnC,CAAxB,CAAf;AACAH,QAAAA,EAAE,CAACK,WAAH,CAAeD,EAAf;AACD;;AACDd,MAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBiB,MAAhB,CAAuBP,EAAvB;AACH;AACJ;AA3B4C,CAA7C","sourcesContent":["import consumer from \"./consumer\"\n\nconsumer.subscriptions.create(\"RoomChannel\", {\n  connected() {\n    // Called when the subscription is ready for use on the server\n    console.log(\"connected to the room......\")\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n    console.log(\"disconnected.......\")\n  },\n\n  received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    $('#container').empty();\n\n    var headers = Object.keys(JSON.parse(data.content)[0]);\n\n    for(var i = 0; i < JSON.parse(data.content).length; i++) {\n      var tr = document.createElement('tr');\n\n        for(var j = 0; j < headers.length; j++) {\n          var td = document.createElement('td');\n          td.appendChild(document.createTextNode(JSON.parse(data.content)[i][headers[j]]));\n          tr.appendChild(td)\n        }\n        $('#container').append(tr);\n    }\n}\n})\n"]},"metadata":{},"sourceType":"module"}