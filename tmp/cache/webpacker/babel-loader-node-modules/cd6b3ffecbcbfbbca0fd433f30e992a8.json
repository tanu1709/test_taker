{"ast":null,"code":"import consumer from \"./consumer\";\nconsumer.subscriptions.create(\"RoomChannel\", {\n  connected: function connected() {\n    // Called when the subscription is ready for use on the server\n    console.log(\"connected to the room......\");\n  },\n  disconnected: function disconnected() {\n    // Called when the subscription has been terminated by the server\n    console.log(\"disconnected.......\");\n  },\n  received: function received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    console.log(\"receiving dataaaaaa\", data);\n    console.log(\"dataaaaaaaa\", JSON.parse(data.content)); // var x = $('#container');\n    // console.log(\"xxxxxxxxxxx\", x);\n    // console.log(\"data.content[0] $$$$$$$\", JSON.parse(data.content)[0]);\n\n    var headers = Object.keys(JSON.parse(data.content)[0]); // console.log(\"headersssssssss\", headers);\n\n    for (var i = 0; i < data.content.length; i++) {\n      var tr = document.createElement('tr');\n\n      for (var j = 0; j < headers.length; j++) {\n        // console.log(\"jjjjjjj\", headers[j]);\n        var td = document.createElement('td'); // console.log(\"iiiiiiiii\", i, \" @@@@@@@ \", JSON.parse(data.content)[i]);\n\n        try {\n          console.log(\"valueeeeeeee\", j, \" ******** \", JSON.parse(data.content)[i][headers[j]]);\n          td.appendChild(document.createTextNode(JSON.parse(data.content)[i][headers[j]]));\n          tr.appendChild(td);\n        } catch (e) {\n          console.log(\"eeeeeeee\", e);\n        }\n      }\n\n      console.log(\"table rowwwwwwww\", tr);\n      $('#container').append(tr);\n    }\n  }\n});","map":{"version":3,"sources":["/home/amit/workspace/test_taker_app_folder/joineight_assignment/test_taker/app/javascript/channels/room_channel.js"],"names":["consumer","subscriptions","create","connected","console","log","disconnected","received","data","JSON","parse","content","headers","Object","keys","i","length","tr","document","createElement","j","td","appendChild","createTextNode","e","$","append"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEAA,QAAQ,CAACC,aAAT,CAAuBC,MAAvB,CAA8B,aAA9B,EAA6C;AAC3CC,EAAAA,SAD2C,uBAC/B;AACV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,GAJ0C;AAM3CC,EAAAA,YAN2C,0BAM5B;AACb;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,GAT0C;AAW3CE,EAAAA,QAX2C,oBAWlCC,IAXkC,EAW5B;AACb;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCG,IAAnC;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,OAAhB,CAA3B,EAHa,CAIb;AACA;AAEA;;AAIA,QAAIC,OAAO,GAAGC,MAAM,CAACC,IAAP,CAAYL,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,OAAhB,EAAyB,CAAzB,CAAZ,CAAd,CAXa,CAYb;;AACA,SAAI,IAAII,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGP,IAAI,CAACG,OAAL,CAAaK,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;AAC3C,UAAIE,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAT;;AAEE,WAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGR,OAAO,CAACI,MAA3B,EAAmCI,CAAC,EAApC,EAAwC;AACtC;AACA,YAAIC,EAAE,GAAGH,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAT,CAFsC,CAGtC;;AACA,YAAI;AACFf,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4Be,CAA5B,EAA+B,YAA/B,EAA6CX,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,OAAhB,EAAyBI,CAAzB,EAA4BH,OAAO,CAACQ,CAAD,CAAnC,CAA7C;AACAC,UAAAA,EAAE,CAACC,WAAH,CAAeJ,QAAQ,CAACK,cAAT,CAAwBd,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,OAAhB,EAAyBI,CAAzB,EAA4BH,OAAO,CAACQ,CAAD,CAAnC,CAAxB,CAAf;AACAH,UAAAA,EAAE,CAACK,WAAH,CAAeD,EAAf;AACD,SAJD,CAIE,OAAMG,CAAN,EAAS;AACTpB,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBmB,CAAxB;AACD;AAEF;;AAEDpB,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCY,EAAhC;AAIEQ,MAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBC,MAAhB,CAAuBT,EAAvB;AACL;AACJ;AA/C4C,CAA7C","sourcesContent":["import consumer from \"./consumer\"\n\nconsumer.subscriptions.create(\"RoomChannel\", {\n  connected() {\n    // Called when the subscription is ready for use on the server\n    console.log(\"connected to the room......\")\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n    console.log(\"disconnected.......\")\n  },\n\n  received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    console.log(\"receiving dataaaaaa\", data);\n    console.log(\"dataaaaaaaa\", JSON.parse(data.content));\n    // var x = $('#container');\n    // console.log(\"xxxxxxxxxxx\", x);\n\n    // console.log(\"data.content[0] $$$$$$$\", JSON.parse(data.content)[0]);\n\n\n\n    var headers = Object.keys(JSON.parse(data.content)[0]);\n    // console.log(\"headersssssssss\", headers);\n    for(var i = 0; i < data.content.length; i++) {\n      var tr = document.createElement('tr');\n\n        for(var j = 0; j < headers.length; j++) {\n          // console.log(\"jjjjjjj\", headers[j]);\n          var td = document.createElement('td');\n          // console.log(\"iiiiiiiii\", i, \" @@@@@@@ \", JSON.parse(data.content)[i]);\n          try {\n            console.log(\"valueeeeeeee\", j, \" ******** \", JSON.parse(data.content)[i][headers[j]]);\n            td.appendChild(document.createTextNode(JSON.parse(data.content)[i][headers[j]]));\n            tr.appendChild(td)\n          } catch(e) {\n            console.log(\"eeeeeeee\", e);\n          }\n\n        }\n\n        console.log(\"table rowwwwwwww\", tr);\n\n\n\n          $('#container').append(tr);\n    }\n}\n})\n"]},"metadata":{},"sourceType":"module"}