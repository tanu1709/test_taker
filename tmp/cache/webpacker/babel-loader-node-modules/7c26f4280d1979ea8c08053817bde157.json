{"ast":null,"code":"import consumer from \"./consumer\";\nconsumer.subscriptions.create(\"RoomChannel\", {\n  connected: function connected() {\n    // Called when the subscription is ready for use on the server\n    console.log(\"connected to the room......\");\n  },\n  disconnected: function disconnected() {\n    // Called when the subscription has been terminated by the server\n    console.log(\"disconnected.......\");\n  },\n  received: function received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    console.log(\"receiving dataaaaaa\", data);\n    console.log(\"dataaaaaaaa\", JSON.parse(data.content));\n    var x = $('#container');\n    console.log(\"xxxxxxxxxxx\", x);\n    $('#container').append('<div class=\"message\"> ' + data.content + '</div>');\n  }\n});","map":{"version":3,"sources":["/home/amit/workspace/test_taker_app_folder/joineight_assignment/test_taker/app/javascript/channels/room_channel.js"],"names":["consumer","subscriptions","create","connected","console","log","disconnected","received","data","JSON","parse","content","x","$","append"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AAEAA,QAAQ,CAACC,aAAT,CAAuBC,MAAvB,CAA8B,aAA9B,EAA6C;AAC3CC,EAAAA,SAD2C,uBAC/B;AACV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ;AACD,GAJ0C;AAM3CC,EAAAA,YAN2C,0BAM5B;AACb;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACD,GAT0C;AAW3CE,EAAAA,QAX2C,oBAWlCC,IAXkC,EAW5B;AACb;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCG,IAAnC;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BI,IAAI,CAACC,KAAL,CAAWF,IAAI,CAACG,OAAhB,CAA3B;AACA,QAAIC,CAAC,GAAGC,CAAC,CAAC,YAAD,CAAT;AACAT,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BO,CAA3B;AACAC,IAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBC,MAAhB,CAAuB,2BAA2BN,IAAI,CAACG,OAAhC,GAA0C,QAAjE;AACD;AAlB0C,CAA7C","sourcesContent":["import consumer from \"./consumer\"\n\nconsumer.subscriptions.create(\"RoomChannel\", {\n  connected() {\n    // Called when the subscription is ready for use on the server\n    console.log(\"connected to the room......\")\n  },\n\n  disconnected() {\n    // Called when the subscription has been terminated by the server\n    console.log(\"disconnected.......\")\n  },\n\n  received(data) {\n    // Called when there's incoming data on the websocket for this channel\n    console.log(\"receiving dataaaaaa\", data)\n    console.log(\"dataaaaaaaa\", JSON.parse(data.content));\n    var x = $('#container');\n    console.log(\"xxxxxxxxxxx\", x);\n    $('#container').append('<div class=\"message\"> ' + data.content + '</div>')\n  }\n});\n"]},"metadata":{},"sourceType":"module"}